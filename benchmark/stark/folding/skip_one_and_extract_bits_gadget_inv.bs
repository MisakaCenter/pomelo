PUSH_SYMINT_31
PUSH_SYMINT_30
PUSH_SYMINT_29
PUSH_SYMINT_28
PUSH_SYMINT_27
PUSH_SYMINT_26
PUSH_SYMINT_25
PUSH_SYMINT_24
PUSH_SYMINT_23
PUSH_SYMINT_22
PUSH_SYMINT_21
PUSH_SYMINT_20
PUSH_SYMINT_19
PUSH_SYMINT_18
PUSH_SYMINT_17
PUSH_SYMINT_16
PUSH_SYMINT_15
PUSH_SYMINT_14
PUSH_SYMINT_13
PUSH_SYMINT_12
PUSH_SYMINT_11
PUSH_SYMINT_10
PUSH_SYMINT_9
PUSH_SYMINT_8
PUSH_SYMINT_7
PUSH_SYMINT_6
PUSH_SYMINT_5
PUSH_SYMINT_4
PUSH_SYMINT_3
PUSH_SYMINT_2
PUSH_SYMINT_1
PUSH_SYMINT_0
ASSUME_0 { (stack[1] == v1) }
OP_DUP OP_ADD OP_SWAP
ASSERT_1 { (stack[0] == v1) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_2 { ((v1 == 0) || (v1 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_3 { (stack[0] == v2) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_4 { ((v2 == 0) || (v2 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_5 { (stack[0] == v3) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_6 { ((v3 == 0) || (v3 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_7 { (stack[0] == v4) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_8 { ((v4 == 0) || (v4 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_9 { (stack[0] == v5) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_10 { ((v5 == 0) || (v5 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_11 { (stack[0] == v6) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_12 { ((v6 == 0) || (v6 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_13 { (stack[0] == v7) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_14 { ((v7 == 0) || (v7 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_15 { (stack[0] == v8) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_16 { ((v8 == 0) || (v8 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_17 { (stack[0] == v9) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_18 { ((v9 == 0) || (v9 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_19 { (stack[0] == v10) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_20 { ((v10 == 0) || (v10 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_21 { (stack[0] == v11) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_22 { ((v11 == 0) || (v11 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_23 { (stack[0] == v12) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_24 { ((v12 == 0) || (v12 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_25 { (stack[0] == v13) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_26 { ((v13 == 0) || (v13 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_27 { (stack[0] == v14) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_28 { ((v14 == 0) || (v14 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_29 { (stack[0] == v15) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_30 { ((v15 == 0) || (v15 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_31 { (stack[0] == v16) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_32 { ((v16 == 0) || (v16 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_33 { (stack[0] == v17) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_34 { ((v17 == 0) || (v17 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_35 { (stack[0] == v18) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_36 { ((v18 == 0) || (v18 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_37 { (stack[0] == v19) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_38 { ((v19 == 0) || (v19 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_39 { (stack[0] == v20) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_40 { ((v20 == 0) || (v20 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_41 { (stack[0] == v21) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_42 { ((v21 == 0) || (v21 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_43 { (stack[0] == v22) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_44 { ((v22 == 0) || (v22 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_45 { (stack[0] == v23) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_46 { ((v23 == 0) || (v23 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_47 { (stack[0] == v24) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_48 { ((v24 == 0) || (v24 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_49 { (stack[0] == v25) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_50 { ((v25 == 0) || (v25 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_51 { (stack[0] == v26) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_52 { ((v26 == 0) || (v26 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_53 { (stack[0] == v27) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_54 { ((v27 == 0) || (v27 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_55 { (stack[0] == v28) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_56 { ((v28 == 0) || (v28 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_57 { (stack[0] == v29) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_58 { ((v29 == 0) || (v29 == 1)) }
OP_ADD
OP_DUP OP_ADD OP_SWAP
ASSERT_59 { (stack[0] == v30) }
OP_DUP OP_0 OP_GREATERTHANOREQUAL OP_VERIFY OP_DUP OP_PUSHNUM_1 OP_LESSTHANOREQUAL OP_VERIFY
ASSUME_60 { ((v30 == 0) || (v30 == 1)) }
OP_ADD
OP_EQUALVERIFY
ASSERT_0 { ((v1 == 0) || (v1 == 1)) }
ASSERT_1 { ((v2 == 0) || (v2 == 1)) }
ASSERT_2 { ((v3 == 0) || (v3 == 1)) }
ASSERT_3 { ((v4 == 0) || (v4 == 1)) }
ASSERT_4 { ((v5 == 0) || (v5 == 1)) }
ASSERT_5 { ((v6 == 0) || (v6 == 1)) }
ASSERT_6 { ((v7 == 0) || (v7 == 1)) }
ASSERT_7 { ((v8 == 0) || (v8 == 1)) }
ASSERT_8 { ((v9 == 0) || (v9 == 1)) }
ASSERT_9 { ((v10 == 0) || (v10 == 1)) }
ASSERT_10 { ((v11 == 0) || (v11 == 1)) }
ASSERT_11 { ((v12 == 0) || (v12 == 1)) }
ASSERT_12 { ((v13 == 0) || (v13 == 1)) }
ASSERT_13 { ((v14 == 0) || (v14 == 1)) }
ASSERT_14 { ((v15 == 0) || (v15 == 1)) }
ASSERT_15 { ((v16 == 0) || (v16 == 1)) }
ASSERT_16 { ((v17 == 0) || (v17 == 1)) }
ASSERT_17 { ((v18 == 0) || (v18 == 1)) }
ASSERT_18 { ((v19 == 0) || (v19 == 1)) }
ASSERT_19 { ((v20 == 0) || (v20 == 1)) }
ASSERT_20 { ((v21 == 0) || (v21 == 1)) }
ASSERT_21 { ((v22 == 0) || (v22 == 1)) }
ASSERT_22 { ((v23 == 0) || (v23 == 1)) }
ASSERT_23 { ((v24 == 0) || (v24 == 1)) }
ASSERT_24 { ((v25 == 0) || (v25 == 1)) }
ASSERT_25 { ((v26 == 0) || (v26 == 1)) }
ASSERT_26 { ((v27 == 0) || (v27 == 1)) }
ASSERT_27 { ((v28 == 0) || (v28 == 1)) }
ASSERT_28 { ((v29 == 0) || (v29 == 1)) }
ASSERT_29 { ((v30 == 0) || (v30 == 1)) }
ASSERT_30 { (v31 == ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * ((2 * v0) + v1)) + v2)) + v3)) + v4)) + v5)) + v6)) + v7)) + v8)) + v9)) + v10)) + v11)) + v12)) + v13)) + v14)) + v15)) + v16)) + v17)) + v18)) + v19)) + v20)) + v21)) + v22)) + v23)) + v24)) + v25)) + v26)) + v27)) + v28)) + v29)) + v30)) }
