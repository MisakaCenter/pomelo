PUSH_SYMINT_0
ASSUME_0 { ((v0 < 536870912) && (v0 >= 0)) }
OP_PUSHNUM_2
OP_TOALTSTACK
OP_PUSHNUM_4
OP_TOALTSTACK
OP_PUSHNUM_8
OP_TOALTSTACK
OP_PUSHNUM_16
OP_TOALTSTACK
OP_PUSHBYTES_1 20
OP_TOALTSTACK
OP_PUSHBYTES_1 40
OP_TOALTSTACK
OP_PUSHBYTES_2 8000
OP_TOALTSTACK
OP_PUSHBYTES_2 0001
OP_TOALTSTACK
OP_PUSHBYTES_2 0002
OP_TOALTSTACK
OP_PUSHBYTES_2 0004
OP_TOALTSTACK
OP_PUSHBYTES_2 0008
OP_TOALTSTACK
OP_PUSHBYTES_2 0010
OP_TOALTSTACK
OP_PUSHBYTES_2 0020
OP_TOALTSTACK
OP_PUSHBYTES_2 0040
OP_TOALTSTACK
OP_PUSHBYTES_3 008000
OP_TOALTSTACK
OP_PUSHBYTES_3 000001
OP_TOALTSTACK
OP_PUSHBYTES_3 000002
OP_TOALTSTACK
OP_PUSHBYTES_3 000004
OP_TOALTSTACK
OP_PUSHBYTES_3 000008
OP_TOALTSTACK
OP_PUSHBYTES_3 000010
OP_TOALTSTACK
OP_PUSHBYTES_3 000020
OP_TOALTSTACK
OP_PUSHBYTES_3 000040
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_DUP
OP_TOALTSTACK
OP_DUP
OP_ADD
OP_TOALTSTACK
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
OP_FROMALTSTACK
OP_2DUP
OP_GREATERTHANOREQUAL
OP_IF
OP_SUB
OP_PUSHNUM_1
OP_ELSE
OP_DROP
OP_0
OP_ENDIF
OP_SWAP
ASSERT_0 { (stack[0] == ((v0 >> 0) - ((v0 >> 1) << 1))) }
ASSERT_1 { (stack[1] == ((v0 >> 1) - ((v0 >> 2) << 1))) }
ASSERT_2 { (stack[2] == ((v0 >> 2) - ((v0 >> 3) << 1))) }
ASSERT_3 { (stack[3] == ((v0 >> 3) - ((v0 >> 4) << 1))) }
ASSERT_4 { (stack[4] == ((v0 >> 4) - ((v0 >> 5) << 1))) }
ASSERT_5 { (stack[5] == ((v0 >> 5) - ((v0 >> 6) << 1))) }
ASSERT_6 { (stack[6] == ((v0 >> 6) - ((v0 >> 7) << 1))) }
ASSERT_7 { (stack[7] == ((v0 >> 7) - ((v0 >> 8) << 1))) }
ASSERT_8 { (stack[8] == ((v0 >> 8) - ((v0 >> 9) << 1))) }
ASSERT_9 { (stack[9] == ((v0 >> 9) - ((v0 >> 10) << 1))) }
ASSERT_10 { (stack[10] == ((v0 >> 10) - ((v0 >> 11) << 1))) }
ASSERT_11 { (stack[11] == ((v0 >> 11) - ((v0 >> 12) << 1))) }
ASSERT_12 { (stack[12] == ((v0 >> 12) - ((v0 >> 13) << 1))) }
ASSERT_13 { (stack[13] == ((v0 >> 13) - ((v0 >> 14) << 1))) }
ASSERT_14 { (stack[14] == ((v0 >> 14) - ((v0 >> 15) << 1))) }
ASSERT_15 { (stack[15] == ((v0 >> 15) - ((v0 >> 16) << 1))) }
ASSERT_16 { (stack[16] == ((v0 >> 16) - ((v0 >> 17) << 1))) }
ASSERT_17 { (stack[17] == ((v0 >> 17) - ((v0 >> 18) << 1))) }
ASSERT_18 { (stack[18] == ((v0 >> 18) - ((v0 >> 19) << 1))) }
ASSERT_19 { (stack[19] == ((v0 >> 19) - ((v0 >> 20) << 1))) }
ASSERT_20 { (stack[20] == ((v0 >> 20) - ((v0 >> 21) << 1))) }
ASSERT_21 { (stack[21] == ((v0 >> 21) - ((v0 >> 22) << 1))) }
ASSERT_22 { (stack[22] == ((v0 >> 22) - ((v0 >> 23) << 1))) }
ASSERT_23 { (stack[23] == ((v0 >> 23) - ((v0 >> 24) << 1))) }
ASSERT_24 { (stack[24] == ((v0 >> 24) - ((v0 >> 25) << 1))) }
ASSERT_25 { (stack[25] == ((v0 >> 25) - ((v0 >> 26) << 1))) }
ASSERT_26 { (stack[26] == ((v0 >> 26) - ((v0 >> 27) << 1))) }
ASSERT_27 { (stack[27] == ((v0 >> 27) - ((v0 >> 28) << 1))) }
ASSERT_28 { (stack[28] == ((v0 >> 28) - ((v0 >> 29) << 1))) }
