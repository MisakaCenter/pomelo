PUSH_BIGINT_0 254 29 limbs0
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_0
OP_DUP
OP_2DUP
OP_3DUP
OP_DUP
OP_PUSHNUM_1
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_9
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_10
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_11
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_12
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_13
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_14
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_15
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHNUM_16
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_PUSHBYTES_1 11
OP_ROLL
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_EQUAL
OP_TOALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
OP_BOOLAND
ASSERT_0 { (stack[0] == (if (v0 == 1) then 1 else 0)) }
ASSERT_1 { (stack[1] == limbs0[0]) }
ASSERT_2 { (stack[2] == limbs0[1]) }
ASSERT_3 { (stack[3] == limbs0[2]) }
ASSERT_4 { (stack[4] == limbs0[3]) }
ASSERT_5 { (stack[5] == limbs0[4]) }
ASSERT_6 { (stack[6] == limbs0[5]) }
ASSERT_7 { (stack[7] == limbs0[6]) }
ASSERT_8 { (stack[8] == limbs0[7]) }
ASSERT_9 { (stack[9] == limbs0[8]) }
