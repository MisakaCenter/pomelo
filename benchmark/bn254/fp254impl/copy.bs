PUSH_BIGINT_0 254 29 limbs0
PUSH_BIGINT_1 254 29 limbs1
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
OP_PUSHBYTES_1 11 OP_PICK
ASSERT_0 { (stack[0] == limbs0[0]) }
ASSERT_1 { (stack[1] == limbs0[1]) }
ASSERT_2 { (stack[2] == limbs0[2]) }
ASSERT_3 { (stack[3] == limbs0[3]) }
ASSERT_4 { (stack[4] == limbs0[4]) }
ASSERT_5 { (stack[5] == limbs0[5]) }
ASSERT_6 { (stack[6] == limbs0[6]) }
ASSERT_7 { (stack[7] == limbs0[7]) }
ASSERT_8 { (stack[8] == limbs0[8]) }
ASSERT_9 { (stack[9] == limbs1[0]) }
ASSERT_10 { (stack[10] == limbs1[1]) }
ASSERT_11 { (stack[11] == limbs1[2]) }
ASSERT_12 { (stack[12] == limbs1[3]) }
ASSERT_13 { (stack[13] == limbs1[4]) }
ASSERT_14 { (stack[14] == limbs1[5]) }
ASSERT_15 { (stack[15] == limbs1[6]) }
ASSERT_16 { (stack[16] == limbs1[7]) }
ASSERT_17 { (stack[17] == limbs1[8]) }
ASSERT_18 { (stack[18] == limbs0[0]) }
ASSERT_19 { (stack[19] == limbs0[1]) }
ASSERT_20 { (stack[20] == limbs0[2]) }
ASSERT_21 { (stack[21] == limbs0[3]) }
ASSERT_22 { (stack[22] == limbs0[4]) }
ASSERT_23 { (stack[23] == limbs0[5]) }
ASSERT_24 { (stack[24] == limbs0[6]) }
ASSERT_25 { (stack[25] == limbs0[7]) }
ASSERT_26 { (stack[26] == limbs0[8]) }
