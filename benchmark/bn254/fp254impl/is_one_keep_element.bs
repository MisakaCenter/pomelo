PUSH_BIGINT_0 254 29 limbs0
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHNUM_8
OP_PICK
OP_PUSHBYTES_4 21cc7c15
OP_EQUAL
OP_SWAP
OP_PUSHBYTES_4 58271c14
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 d3305218
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 19044c01
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 b96fa30a
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 ce40421d
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 074cd511
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_4 a8c72a05
OP_EQUAL
OP_BOOLAND
OP_SWAP
OP_PUSHBYTES_3 36c80d
OP_EQUAL
OP_BOOLAND
ASSERT_0 { (stack[0] == (if (v0 == 6233810253280740994628949329533561314962923717165850268195284058176919227425) then 1 else 0)) }
ASSERT_1 { (stack[1] == limbs0[0]) }
ASSERT_2 { (stack[2] == limbs0[1]) }
ASSERT_3 { (stack[3] == limbs0[2]) }
ASSERT_4 { (stack[4] == limbs0[3]) }
ASSERT_5 { (stack[5] == limbs0[4]) }
ASSERT_6 { (stack[6] == limbs0[5]) }
ASSERT_7 { (stack[7] == limbs0[6]) }
ASSERT_8 { (stack[8] == limbs0[7]) }
ASSERT_9 { (stack[9] == limbs0[8]) }
