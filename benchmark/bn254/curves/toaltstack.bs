PUSH_BIGINT_0 254 29 limbs0
PUSH_BIGINT_1 254 29 limbs1
PUSH_BIGINT_2 254 29 limbs2
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
OP_TOALTSTACK
ASSERT_0 { (altstack[0] == limbs0[8]) }
ASSERT_1 { (altstack[1] == limbs0[7]) }
ASSERT_2 { (altstack[2] == limbs0[6]) }
ASSERT_3 { (altstack[3] == limbs0[5]) }
ASSERT_4 { (altstack[4] == limbs0[4]) }
ASSERT_5 { (altstack[5] == limbs0[3]) }
ASSERT_6 { (altstack[6] == limbs0[2]) }
ASSERT_7 { (altstack[7] == limbs0[1]) }
ASSERT_8 { (altstack[8] == limbs0[0]) }
ASSERT_9 { (altstack[9] == limbs1[8]) }
ASSERT_10 { (altstack[10] == limbs1[7]) }
ASSERT_11 { (altstack[11] == limbs1[6]) }
ASSERT_12 { (altstack[12] == limbs1[5]) }
ASSERT_13 { (altstack[13] == limbs1[4]) }
ASSERT_14 { (altstack[14] == limbs1[3]) }
ASSERT_15 { (altstack[15] == limbs1[2]) }
ASSERT_16 { (altstack[16] == limbs1[1]) }
ASSERT_17 { (altstack[17] == limbs1[0]) }
ASSERT_18 { (altstack[18] == limbs2[8]) }
ASSERT_19 { (altstack[19] == limbs2[7]) }
ASSERT_20 { (altstack[20] == limbs2[6]) }
ASSERT_21 { (altstack[21] == limbs2[5]) }
ASSERT_22 { (altstack[22] == limbs2[4]) }
ASSERT_23 { (altstack[23] == limbs2[3]) }
ASSERT_24 { (altstack[24] == limbs2[2]) }
ASSERT_25 { (altstack[25] == limbs2[1]) }
ASSERT_26 { (altstack[26] == limbs2[0]) }
