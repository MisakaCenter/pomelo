PUSH_BIGINT_0 254 29 limbs0
PUSH_BIGINT_1 254 29 limbs1
OP_PUSHBYTES_1 11 OP_PICK OP_PUSHNUM_9 OP_PICK
OP_PUSHBYTES_1 12 OP_PICK OP_PUSHNUM_10 OP_PICK
OP_PUSHBYTES_1 13 OP_PICK OP_PUSHNUM_11 OP_PICK
OP_PUSHBYTES_1 14 OP_PICK OP_PUSHNUM_12 OP_PICK
OP_PUSHBYTES_1 15 OP_PICK OP_PUSHNUM_13 OP_PICK
OP_PUSHBYTES_1 16 OP_PICK OP_PUSHNUM_14 OP_PICK
OP_PUSHBYTES_1 17 OP_PICK OP_PUSHNUM_15 OP_PICK
OP_PUSHBYTES_1 18 OP_PICK OP_PUSHNUM_16 OP_PICK
OP_PUSHBYTES_1 19 OP_PICK OP_PUSHBYTES_1 11 OP_PICK
ASSERT_0 { (stack[0] == limbs1[0]) }
ASSERT_1 { (stack[1] == limbs0[0]) }
ASSERT_2 { (stack[2] == limbs1[1]) }
ASSERT_3 { (stack[3] == limbs0[1]) }
ASSERT_4 { (stack[4] == limbs1[2]) }
ASSERT_5 { (stack[5] == limbs0[2]) }
ASSERT_6 { (stack[6] == limbs1[3]) }
ASSERT_7 { (stack[7] == limbs0[3]) }
ASSERT_8 { (stack[8] == limbs1[4]) }
ASSERT_9 { (stack[9] == limbs0[4]) }
ASSERT_10 { (stack[10] == limbs1[5]) }
ASSERT_11 { (stack[11] == limbs0[5]) }
ASSERT_12 { (stack[12] == limbs1[6]) }
ASSERT_13 { (stack[13] == limbs0[6]) }
ASSERT_14 { (stack[14] == limbs1[7]) }
ASSERT_15 { (stack[15] == limbs0[7]) }
ASSERT_16 { (stack[16] == limbs1[8]) }
ASSERT_17 { (stack[17] == limbs0[8]) }
